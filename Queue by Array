public class queue {
   static int front,rear,cap;
   static int q[];
    queue(int c) {
        front=0;
        rear=0;
        cap=c;
        q=new int[cap];
    }
    public void enqueue(int data){
    if(rear==cap)
      System.out.println("Queue is full");
    else{
      q[rear]=data;
      rear++;
    }
  }
  public int dequeue(){
    if(front==rear){
      System.out.println("Queue is empty");
      return -1;
    }
    else{
      int x=q[front];
      for(int i=0; i<rear-1; i++)
        q[i]=q[i+1];

      rear--;
      q[rear]=0;
      return x;
    }
  }
  public int front(){
    if(front==rear){
      System.out.println("Queue is empty");
      return -1;
    }
    else{
      return q[front];
    }
  }
  public int rear(){
    if(front==rear){
      System.out.println("Queue is empty");
      return -1;
    }
    else{
      return q[rear-1];
    }
  }
  public void print(){
      for(int i=front;i<rear;i++)
      System.out.println(q[i]);
  }
  public static void main(String[] args){
  //creating queue of capacity 4(cap=4)
      queue s=new queue(4);
      System.out.println(s.dequeue());
      s.enqueue(10);
      s.enqueue(20);
      System.out.println(s.dequeue());
      s.enqueue(30);
      System.out.println(s.front());
      s.enqueue(40);
      System.out.println("remaining element in queue");
      s.print();
    }
}
